#!/bin/bash

sudo apt-get update
sudo apt-get upgrade -y
sudo apt-get install -y php php-apcu php-common php-intl php-json php-mbstring php-mysql php-xml mariadb-server apache2 unzip

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
rm /awscliv2.zip

echo > create_mariadb.sql<< EOF
CREATE DATABASE my_wiki;
CREATE USER 'wikiuser'@'localhost' IDENTIFIED BY '${mariadb_password}';
GRANT ALL PRIVILIGES ON my_wiki.* TO 'wikiuser'@'localhost' WITH GRANT OPTION;
EOF
mariadb < create_mariadb.sql
rm create_mariadb.sql

wget https://releases.wikimedia.org/mediawiki/1.40/mediawiki-1.40.0.tar.gz
tar -xzvf mediawiki-*.tar.gz --directory /var/www/html/
mv /var/www/html/mediawiki* /var/www/html/mediawiki
rm /mediawiki-*.tar.gz

chmod a=wrx /var/www/html/mediawiki

echo > /var/www/html/mediawiki/LocalSettings.php<< EOF
<?php
if ( !defined( 'MEDIAWIKI' ) ) {
exit;"
}
\$wgSitename = \"Example Wiki Name\";
\$wgMetaNamespace = \"Example Wiki Name\";
\$wgScriptPath = \"/mediawiki\";
\$wgServer = \"http://test\";
\$wgResourceBasePath = \$wgScriptPath;
\$wgLogos = [
'lx' => \"\$wgResourceBasePath/resources/assets/change-your-logo.svg\",
'icon' => \"\$wgResourceBasePath/resources/assets/change-your-logo.svg\",
];
\$wgEnableEmail = true;
\$wgEnableUserEmail = true;
\$wgEmergencyContact = \"\";
\$wgPasswordSender = \"\";
\$wgEnotifUserTalk = false;
\$wgEnotifWatchlist = false;
\$wgEmailNotification = true;
\$wgDBType = \"mysql\";
\$wgDBServer = \"localhost\";
\$wgDBUser = \"wikiuser\";
\$wgDBPassword = \"password\";
\$wgDBprefix = \"\";
\$wgDBtableOptions = \"ENGINE=InnoDB, DEFAULT CHARSET=binary\";
\$wgSharedTables[] = \"actor\";
\$wgMainCacheType = CACHE_ACCEL;
\$wgMemCachedServers = [];
\$wgEnableUploads = false;
\$wgUseInstantCommons = false;
\$wgPingback = false;
\$wgLanguageCode = \"en\";
\$wgLocalTimezone = \"UTC\";
\$wgSecretKey = $(tr -dc a-f0-9 </dev/urandom | head -c 64)
\$wgUpgradeKey = $(tr -dc a-f0-9 </dev/urandom | head -c 16)
\$wgRightsPage = \"\";
\$wgRightsUrl = \"\";
\$wgRightsText = \"\";
\$wgRightsUrl = \"\";
\$wgDiff3 = \"/usr/bin/diff3\";
\$wgGroupPermissions['*']['createaccount'] = false;
\$wgGroupPermissions['*']['edit'] = false;
\$wgGroupPermissions['*']['read'] = false;
\$wgDefaultSkin = "vector";
wfLoadSkin( 'MinervaNeue' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );
EOF

if [ -n "${backup_s3_bucket_name}" ]
then
  mkdir /mariadb_backups
  echo "#!/bin/bash" > /etc/cron.hourly/mariadb_backups
  echo "mariadb-dump --user=wikiuser --password=${mariadb_password} my_wiki | gzip > /mariadb_backups/backup.sql.gz" >> /etc/cron.hourly/mariadb_backups
  echo "aws s3 cp /mariadb_backups/backup.sql.gz s3://${backup_s3_bucket_name}/backup.sql.gz" >> /etc/cron.hourly/mariadb_backups
  chmod +x /etc/cron.hourly/mariadb_backups

  echo "#!/bin/bash" > /restore_mariadb_from_latest_backup.sh
  echo "aws s3 cp s3://${backup_s3_bucket_name}/backup.sql.gz /backup.sql.gz" >> /restore_mariadb_from_latest_backup.sh
  echo "gzip -d /backup.sql.gz" >> /restore_mariadb_from_latest_backup.sh
  echo "mariadb my_wiki < /backup.sql" >> /restore_mariadb_from_latest_backup.sh
  chmod +x /restore_mariadb_from_latest_backup.sh
fi
